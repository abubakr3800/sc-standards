[metadata]
name = ai-standards-training
version = 1.0.0
author = AI Standards Team
author_email = team@aistandards.com
description = AI-powered system for processing, training, and comparing lighting standards from PDF documents
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-org/ai-standards-training
project_urls =
    Bug Reports = https://github.com/your-org/ai-standards-training/issues
    Source = https://github.com/your-org/ai-standards-training
    Documentation = https://ai-standards-training.readthedocs.io
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Text Processing :: Linguistic
keywords = ai, standards, lighting, pdf, comparison, nlp
license = MIT
license_files = LICENSE

[options]
packages = find:
python_requires = >=3.8
install_requires =
    torch>=1.13.0,<3.0.0
    transformers>=4.21.0
    sentence-transformers>=2.2.0
    scikit-learn>=1.1.0
    numpy>=1.21.0
    pandas>=1.5.0
    PyPDF2>=3.0.0
    pdfplumber>=0.7.0
    pymupdf>=1.20.0
    pdfminer.six>=20221105
    spacy>=3.4.0
    nltk>=3.7.0
    langdetect>=1.0.9
    googletrans==4.0.0rc1
    streamlit>=1.20.0
    fastapi>=0.95.0
    uvicorn>=0.20.0
    sqlalchemy>=1.4.0
    chromadb>=0.3.0
    faiss-cpu>=1.7.0
    matplotlib>=3.5.0
    seaborn>=0.11.0
    plotly>=5.10.0
    tqdm>=4.64.0
    python-dotenv>=0.19.0
    pydantic>=1.10.0
    loguru>=0.6.0

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[options.entry_points]
console_scripts =
    ai-standards = main:main
    ai-standards-process = main:process_pdfs_from_directory
    ai-standards-train = main:train_models_from_processed_data
    ai-standards-compare = main:compare_standards_cli

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=22.0.0
    flake8>=5.0.0
    mypy>=1.0.0
    pre-commit>=2.20.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=0.18.0
gpu =
    torch[cuda]>=1.13.0,<3.0.0
    faiss-gpu>=1.7.0

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .venv,
    .eggs,
    *.egg,
    build,
    dist,
    .tox,
    .coverage,
    .pytest_cache,
    .mypy_cache

[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = ai_standards
known_third_party = torch,transformers,sentence_transformers,sklearn,numpy,pandas

[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = --strict-markers --strict-config --verbose
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

